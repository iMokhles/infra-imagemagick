- name: Install infra-imagemagick-server
  hosts: infra-imagemagick-server

  tasks:
    - name: Access | Add authorized_keys for user ubuntu
      authorized_key: user=ubuntu key="{{ lookup('file', 'templates/cristy-dsa.pub.j2') }}"

    - name: Access | Add user cristy
      user: name=cristy home=/home/cristy shell=/bin/bash comment="Cristy" group=www-data

    - name: Access | Add authorized_keys for user cristy
      authorized_key: user=cristy key="{{ lookup('file', 'templates/cristy-dsa.pub.j2') }}"

    - name: Common | Gather EC2 facts
      action: ec2_facts

    - name: Common | Add US APT Mirrors
      action: template src=templates/sources.list.j2 dest=/etc/apt/sources.list
      register: apt_sources

    - name: Common | Update APT
      apt: upgrade=dist cache_valid_time=3600 update_cache=yes dpkg_options='force-confold,force-confdef'
      when: apt_sources|changed

    - name: Common | Install Packages
      apt: pkg={{ item }} state=present
      with_items:
        - apache2
        - apt-file
        - apg
        - build-essential
        - curl
        - git-core
        - htop
        - iotop
        - libpcre3
        - logtail
        - mlocate
        - mtr
        - mysql-client
        - phpbb3
        - psmisc
        - vsftpd
        - telnet
        - vim
        - wget

    - name: Common | Add convenience shortcut wtf
      action: lineinfile dest=/home/ubuntu/.bashrc line="alias wtf='sudo tail -f /var/log/*{log,err} /var/log/{dmesg,messages,*{,/*}{log,err}}'"

    - name: Web | Add webdev user for uploading www files
      user: name=webdev home=/var/www shell=/bin/bash comment="User for uploading www files" group=www-data password={{ lookup('env','IIM_FTP_PASS_ENC') }}

    - name: Web | Create webroot
      file: path=/var/www state=directory owner=webdev group=www-data mode=0775 recurse=yes
      tags: web

    - name: Web | Apache Modules
      apache2_module: state=present name={{ item }}
      with_items:
        - cgi
        - perl
      register: apache_modules
      tags: web

    - name: Web | Apache Vhost Default
      action: template src=templates/apache-vhosts.j2 dest=/etc/apache2/sites-enabled/000-default.conf
      register: apache_vhost
      tags: web

    - name: Web | Restart
      action: service name=apache2 state=restarted
      tags: web

    - name: FTP | Write config
      action: template src=templates/vsftpd.conf.j2 dest=/etc/vsftpd.conf
      register: vsftp_conf
      tags: ftp

    - name: FTP | Restart
      action: service name=vsftpd state=restarted
      when: vsftp_conf|changed
      tags: ftp

    - name: Build | Install Dev Packages
      apt: pkg={{ item }} state=present
      with_items:
        - build-essential
        - cpanminus
        - fftw-dev
        - libdjvulibre-dev
        - libfontconfig-dev
        - libfreetype6-dev
        - libgs-dev
        - libjpeg-dev
        - liblcms-dev
        - liblqr-dev
        - liblzma-dev
        - libopenexr-dev
        - libpango1.0-dev
        - libperl-dev
        - libpng-dev
        - librsvg2-dev
        - libtiff-dev
        - libwebp-dev
        - libwmf-dev
        - libxml2-dev
        - lzip
        - wget
      tags: build

    - name: Build | Get Perl CPAN Modules
      cpanm: name={{ item }} notest=True
      with_items:
        - Image::Magick
        - Digest::SHA3
      tags: build

    - name: Build | Compile latest ImageMagick
      script: scripts/build-imagemagick.sh {{ lookup('env','IIM_IMAGEMAGICK_VERSION') }} creates=/home/ubuntu/built-imagemagick-{{ lookup('env','IIM_IMAGEMAGICK_VERSION') }}.txt
      tags: build

    - name: Content | Upload Daily Mirror script
      copy: src=scripts/content-fetch.sh dest=/home/ubuntu/content-fetch.sh mode=0755 owner=ubuntu group=ubuntu
      tags: content

    - name: Content | Touch log of Daily Mirror script
      file: path=/var/log/content-fetch.log state=touch owner=ubuntu group=ubuntu mode=644
      tags: content

    - name: Content | Install Daily Mirror script crontab
      cron: name="Daily mirror" user="ubuntu" minute="0" hour="1" job="/home/ubuntu/content-fetch.sh > /var/log/content-fetch.log 2>&1"
      tags: content
